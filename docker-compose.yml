services:
  nginx:
    image: nginx:1.18
    container_name: nginx
    ports:
      - 8081:80
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./web:/var/www/html
    networks:
      - jeromes
    depends_on:
      - web

  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    container_name: web
    volumes:
      - ./web:/var/www/html
      - ./docker/web/php.ini:/usr/local/etc/php/php.ini
    networks:
      - jeromes
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - 5433:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jeromes

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: laravel_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8082:80"
    depends_on:
      - postgres
    networks:
      - jeromes

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - 6380:6379
    volumes:
      - redis_data:/data
    networks:
      - jeromes

  #add rabbit mq service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5673:5672
      - 15673:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - jeromes

  # MinIO S3-compatible object storage
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9002:9000"
      - "9003:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-password123}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - jeromes

  # add worker server same as web
  worker:
    build:
      context: .
      dockerfile: ./docker/worker/Dockerfile
    container_name: worker
    ports:
      - 8085:80
    volumes:
      - ./worker:/var/www/html
      - ./docker/worker/php.ini:/usr/local/etc/php/php.ini
    networks:
      - jeromes
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - minio

  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs
    user: "0:0"
    ports:
      - "8080:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8081
      - INTERNAL_API_BASE_URL=http://nginx
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
      - WATCHPACK_POLL_INTERVAL=1000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    depends_on:
      - nginx
    networks:
      - jeromes

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  minio_data:


networks:
  jeromes:
    driver: bridge
